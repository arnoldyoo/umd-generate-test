{"version":3,"file":"component-loader.factory.js","sourceRoot":"","sources":["../../../../src/ng2bs/component-loader/component-loader.factory.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,UAAU,EAAE,MAAM,EAAoB,wBAAwB,EAAE,QAAQ,EAEzE,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAGpD,IAAa,sBAAsB;IAMjC,gCAAmB,wBAAkD,EAAE,MAAc,EAClE,QAAkB,EAAE,UAA8B;QACnE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;IAC5D,CAAC;IAED;;;;;;OAMG;IACI,6CAAY,GAAnB,UAAuB,WAAuB,EAAE,iBAAmC,EAAE,SAAmB;QACtG,MAAM,CAAC,IAAI,eAAe,CAAI,iBAAiB,EAAE,SAAS,EAAE,WAAW,EACrE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACpF,CAAC;IACH,6BAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,sBAAsB;IADlC,UAAU,EAAE;qCAOkC,wBAAwB,EAAU,MAAM;QACxD,QAAQ,EAAc,kBAAkB;GAP1D,sBAAsB,CAyBlC;SAzBY,sBAAsB","sourcesContent":["import {\n  Injectable, NgZone, ViewContainerRef, ComponentFactoryResolver, Injector,\n  Renderer, ElementRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n  private _componentFactoryResolver: ComponentFactoryResolver;\n  private _ngZone: NgZone;\n  private _injector: Injector;\n  private _posService: PositioningService;\n\n  public constructor(componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone,\n                     injector: Injector, posService: PositioningService) {\n    this._ngZone = ngZone;\n    this._injector = injector;\n    this._posService = posService;\n    this._componentFactoryResolver = componentFactoryResolver;\n  }\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  public createLoader<T>(_elementRef: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer):ComponentLoader<T> {\n    return new ComponentLoader<T>(_viewContainerRef, _renderer, _elementRef,\n      this._injector, this._componentFactoryResolver, this._ngZone, this._posService);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}